package StockBook.model;

import java.util.List;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Transient;

@Entity
public class Invoice {

	 	@Id
	    @Column
	    @GeneratedValue(strategy = GenerationType.IDENTITY)
	    private long id;
	 	@Transient
	 	private List<Stock_Request> stockRequests;
	    @Column
	    private String status;

	    public Invoice() {
	    }

	    public long getId() {
	        return id;
	    }

	    public void setId(long id) {
	        this.id = id;
	    }
	    
	    

	    public List<Stock_Request> getStockRequests() {
			return stockRequests;
		}

		public void setStockRequests(List<Stock_Request> stockRequests) {
			this.stockRequests = stockRequests;
		}


		public String getStatus() {
	        return status;
	    }

	    public void setStatus(String status) {
	        this.status = status;
	    }

	    //********** RELATIONSHIPS *********

	    //an invoice can be generated by one and only one user(stock manager)
	    @ManyToOne
	    @JoinColumn(name = "generatedBy", referencedColumnName = "id", nullable = false)
	    private Users stockManager;
	    
	    //an invoice can be validated by one and only one user(stock manager)
	    @ManyToOne
	    @JoinColumn(name = "validatedBy", referencedColumnName = "id", nullable = true)
	    private Users storeManager;
	    
	    //an invoice can contain several stock requests
	    @OneToMany(mappedBy = "invoice")
	    private List<Stock_Request> stockRequestsList;
	    
	    @ManyToOne
	    @JoinColumn(name = "store", referencedColumnName = "id", nullable = false)
	    private Stores store;

	    //********** FOREIGN KEY METHODS ***********


	    public Users getStockManager() {
	        return stockManager;
	    }

	    public void setStockManager(Users stockManager) {
	        this.stockManager = stockManager;
	    }
	    
		public Users getStoreManager() {
			return stockManager;
		}

		public void setStoreManager(Users stockManager) {
			this.stockManager = stockManager;
		}

		public List<Stock_Request> getStockRequestsList() {
			return stockRequestsList;
		}

		public void setStockRequestsList(List<Stock_Request> stockRequestsList) {
			this.stockRequestsList = stockRequestsList;
		}

		public Stores getStores() {
			return store;
		}

		public void setStores(Stores stores) {
			this.store = stores;
		}
}
